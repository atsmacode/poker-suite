import{g as o,c as h,i as p,j as C,m as b,k,a as m,o as v,b as d,l as M,v as V,F as _,r as R,t as w}from"./app-DS9Jii7d.js";function B(){const u=o(""),r=o(""),s=o(null),c=o(null),l=o([]),t=o(6),a=o({id:c,table:{seats:t},scenario:{id:s}}),g=h(()=>{const e=l.value,n=Math.ceil(l.value.length/2);return[e.slice(0,n),e.slice(n).reverse()]}),i=async()=>{try{const e=await C.post(u.value,a.value,{headers:{"X-CSRF-TOKEN":r.value}});console.log(e.data);let n=e.data.data;s.value=n.scenario?.id,c.value=n.id,l.value=n.seats}catch(e){console.log(e.response.data)}},f=e=>{r.value=e},S=e=>{u.value=e};return p(t,()=>{s.value&&i()}),{tableSeatCount:t,seatOrder:g,setupRequest:a,setupGame:i,setToken:f,setRoute:S}}const x=["value"],F={__name:"SelectSeatCount",props:{modelValue:{seatCount:Number,default:6},modelModifiers:{}},emits:b(["seatsChanged"],["update:modelValue"]),setup(u,{emit:r}){const s=k(u,"modelValue"),c=r;return p(s,l=>{c("seatsChanged",l)}),(l,t)=>(v(),m("div",null,[t[1]||(t[1]=d("label",{for:"seats"},"Select seat count",-1)),M(d("select",{id:"seats",name:"seats","onUpdate:modelValue":t[0]||(t[0]=a=>s.value=a)},[(v(),m(_,null,R([6,7,8,9],a=>d("option",{value:a},w(a),9,x)),64))],512),[[V,s.value]])]))}};export{F as _,B as u};
